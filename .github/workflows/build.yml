name: Build and Test

on:
  push:
    branches: [ main, develop, optimize-* ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  APP_NAME: UnclutterPlus

jobs:
  build:
    runs-on: macos-14
    
    strategy:
      matrix:
        xcode: ['15.4']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{ matrix.xcode }}
        
    - name: Cache Swift Package Manager
      uses: actions/cache@v4
      with:
        path: .build
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-
          
    - name: Build Debug
      run: |
        swift build -c debug
        echo "Debug build completed successfully"
        
    - name: Build Release
      run: |
        swift build -c release
        echo "Release build completed successfully"
        
    - name: Run Tests
      run: |
        swift test --parallel
        
    - name: Lint Code
      run: |
        # 可以添加 SwiftLint 等代码检查工具
        echo "Code linting completed"
        
    - name: Build App Bundle (Test)
      run: |
        # 测试应用包构建过程
        mkdir -p "${{ env.APP_NAME }}.app/Contents/MacOS"
        mkdir -p "${{ env.APP_NAME }}.app/Contents/Resources"
        
        # 复制可执行文件
        cp ".build/release/${{ env.APP_NAME }}" "${{ env.APP_NAME }}.app/Contents/MacOS/"
        
        # 复制 Info.plist
        cp "Sources/${{ env.APP_NAME }}/Info.plist" "${{ env.APP_NAME }}.app/Contents/"
        
        # 验证应用包结构
        echo "App bundle structure:"
        find "${{ env.APP_NAME }}.app" -type f
        
    - name: Upload Build Artifacts
      if: github.event_name == 'push'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.APP_NAME }}-build-${{ github.sha }}
        path: |
          .build/release/${{ env.APP_NAME }}
          ${{ env.APP_NAME }}.app
        retention-days: 7